name: ðŸ”Œ Plugin | Tests

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

on:
  push:
    branches:
      - main
    paths:
      - datamodel/**
      - plugin/**
      - '.github/workflows/plugin-test.yml'
  pull_request:
    branches:
      - main
    paths:
      - datamodel/**
      - plugin/**
      - '.github/workflows/plugin-test.yml'
  workflow_dispatch:


jobs:
  plugin-tests:
    name: Run unit tests on plugin
    runs-on: ubuntu-24.04
    strategy:
      fail-fast: false
      matrix:
        qgis_version: [3.34-jammy, latest]
        test_name: [QGIS, DSS , cmd]
        include:
          - test_name: QGIS
            test_command: "/usr/src/plugin/.docker/run-docker-tests.sh --deselect teksi_wastewater/tests/test_interlis.py::TestInterlis::test_dss_dataset_import_export"
          - test_name: DSS
            test_command: "/usr/src/plugin/.docker/run-docker-tests.sh teksi_wastewater/tests/test_interlis.py::TestInterlis::test_dss_dataset_import_export"
          - test_name: cmd
            test_command: |
              sh -c '
              set -e;
              xvfb-run /usr/src/plugin/tww_cmd.py interlis_import --xtf_file /usr/src/plugin/teksi_wastewater/tests/data/minimal-dataset-organisation-arbon-only.xtf --pghost db --pgdatabase tww --pguser postgres --pgpass postgres --pgport 5432 &&
              xvfb-run /usr/src/plugin/tww_cmd.py interlis_import --xtf_file /usr/src/plugin/teksi_wastewater/tests/data/minimal-dataset-SIA405-ABWASSER.xtf --pghost db --pgdatabase tww --pguser postgres --pgpass postgres --pgport 5432 &&
              xvfb-run /usr/src/plugin/tww_cmd.py interlis_export --xtf_file "output.xtf" --pghost db --pgdatabase tww --pguser postgres --pgpass postgres --pgport 5432
              '

    env:
      QGIS_TEST_VERSION: ${{ matrix.qgis_version }}
      COMPOSE_PROFILES: qgis

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Setup env
        run: cp .env.example .env

      - name: Package PyPI Packages
        run: sudo ./plugin/scripts/package-pip-packages.sh

      - name: Download Interlis libs
        run: sudo ./plugin/scripts/download-interlis-libs.sh

      - name: Docker build
        run: docker compose --profile qgis up -d --build

      - name: Create Database
        run: |
          until docker compose exec db pg_isready -U postgres; do
            echo "Waiting for PostgreSQL to be ready..."
            sleep 2
          done
          # create the database
          docker compose exec db sh -c 'createdb tww'
          docker compose exec db pum -s pg_tww -d datamodel install -p SRID 2056 --roles --grant
          docker compose exec db sh -c 'psql -U postgres -c "GRANT tww_user TO postgres;"'

      - name: Test on ${{matrix.test_name}}
        run: docker compose run qgis ${{ matrix.test_command }}

      - name: docker logs
        run: docker compose logs db
