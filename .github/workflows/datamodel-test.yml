name: üêò Datamodel | Tests

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

on:
  push:
    branches:
      - main
    paths:
      - datamodel/**
      - '.github/workflows/datamodel-test.yml'
  pull_request:
    branches:
      - main
    paths:
      - datamodel/**
      - '.github/workflows/datamodel-test.yml'
  workflow_dispatch:


jobs:
  datamodel-tests:
    name: Run unit tests on datamodel
    runs-on: ubuntu-24.04

    strategy:
      fail-fast: true

    steps:
      - uses: actions/checkout@v4

      - name: Docker build
        run: |
          docker build \
          --build-arg RUN_TEST=True \
          -f datamodel/.docker/Dockerfile \
          --tag teksi/wastewater:unstable .

      - name: Initialize container
        run: |
          docker run -d -p 5432:5432 --name teksi-wastewater teksi/wastewater:unstable
          until docker exec teksi-wastewater pg_isready -U postgres; do
            echo "Waiting for PostgreSQL to be ready..."
            sleep 2
          done
          # create the database
          docker exec teksi-wastewater sh -c 'createdb tww'
          docker exec teksi-wastewater pum -vvv -s pg_tww -d datamodel install -p SRID 2056 --roles --grant

      - name: Run tests
        run:  docker exec teksi-wastewater pytest datamodel

      - name: Docker logs
        if: failure()
        run: docker logs teksi-wastewater

  extension-db-initalisation-tests:
    name: Run tests to initialize db with an extended datamodel
    runs-on: ubuntu-24.04

    strategy:
      matrix:
        extension: ["ci"]
      fail-fast: true

    steps:
      - uses: actions/checkout@v4

      - name: Docker build
        run: |
          docker build \
          --build-arg RUN_TEST=True \
          -f datamodel/.docker/Dockerfile \
          --tag teksi/wastewater:unstable .

      - name: Initialize container
        run: |
          docker run -d -p 5432:5432 --name teksi-wastewater teksi/wastewater:unstable
          until docker exec teksi-wastewater pg_isready -U postgres; do
            echo "Waiting for PostgreSQL to be ready..."
            sleep 2
          done
          # create the database
          docker exec teksi-wastewater sh -c 'createdb tww'
          docker exec teksi-wastewater pum -vvv -s pg_tww -d datamodel install -p SRID 2056 -p extension_names ${{ matrix.extension }} --roles --grant

      - name: Docker logs
        if: failure()
        run: docker logs teksi-wastewater

  # extension-tests:
  #   name: Run unit tests on extended datamodel
  #   runs-on: ubuntu-24.04

  #   strategy:
  #     matrix:
  #       psycopg-version: [ 2, 3 ]
  #       extension: ["agxx"]
  #     fail-fast: true

  #   steps:
  #     - uses: actions/checkout@v4

  #     - name: Docker build
  #       run: |
  #         docker build \
  #         --build-arg RUN_TEST=True \
  #         --build-arg PSYCOPG_VERSION=${{ matrix.psycopg-version }} \
  #         -f datamodel/.docker/Dockerfile \
  #         --tag teksi/wastewater:unstable .

  #     - name: Initialize container
  #       run: |
  #         docker run -d -p 5432:5432 --name teksi-wastewater -e EXTENSION_NAMES=${{ matrix.extension }} teksi/wastewater:unstable
  #         docker exec teksi-wastewater init_db.sh wait

  #     - name: Run tests
  #       run:  docker exec teksi-wastewater pytest datamodel

  #     - name: Docker logs
  #       if: failure()
  #       run: docker logs teksi-wastewater

  static-tests:
    name: Run static tests on datamodel
    runs-on: ubuntu-24.04

    steps:
    - uses: actions/checkout@v4
    - run: ./datamodel/test/static_tests.sh
